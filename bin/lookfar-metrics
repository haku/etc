#!/bin/bash
set -eu

log() {
  echo $(date +'%Y%m%d-%H%M%S') $@
}

lf_rc="$HOME/.lookfarrc"
if ! [ -e "$lf_rc" ] ; then
  log "missing: $lf_rc"
  exit 1
fi
source "$lf_rc"

lf_node="$(hostname -s)"
lf_data=""

lf_send_data () {
  #log "$(date +'%Y%m%d-%H%M%S') Sending '$lf_var=$lf_data' Lookfar... "
  curl --silent \
    -u "$LF_USER" \
    -d "$lf_data" \
    "https://$LF_HOST/update/$lf_node"
  #log "done."
}

trap "exit" INT TERM
trap "lf_send_data" EXIT

set +e

uptime() {
  lf_data="$lf_data&uptime=$(cut -d ' ' -f 1 /proc/uptime)"
}

ram() {
  lf_data="${lf_data}&mem_available=$(awk '{a[$1]=$2}END{print a["MemAvailable:"]}' /proc/meminfo)kB"
}

loadavg() {
  lf_data="$lf_data&loadavg=$(cut -d ' ' -f 3 /proc/loadavg)"
}

procs() {
  lf_data="$lf_data&proc_count=$(pgrep -c .)"
}

disc_space() {
  local roots=(
    /
    /boot
    /var
    /home
    /media/yama
    /media/yama/extra
  )
  for root in ${roots[@]}; do
    if ! [ -e "$root" ] ; then
      continue
    fi

    if [ "$root" != "/" ] && [ "$(stat --format "%m" "$root")" == "/" ] ; then
      continue
    fi

    local name="$(basename "$root")"
    if [ "$name" == "/" ] ; then
      name="root"
    fi
    local free_mb="$(df --output=avail -m "$root" | awk 'NR==2{print $1}')"
    lf_data="${lf_data}&df_${name}=${free_mb}M"
  done
}

hdd_temp() {
  local data
  if ! data="$(nc -d 127.0.0.1 7634)" ; then
    return
  fi

  local temp_hdd=""
  while read line ; do
    if [[ "$line" =~ ^\|.+\/(.+?)\|.+\|([0-9]+)\| ]] ; then
      name="${BASH_REMATCH[1]}"
      local temp="${BASH_REMATCH[2]}"
      temp_hdd="${temp_hdd}${temp}%20"
    fi
  done < <(echo "$data" | sed 's/||/\n|/g' && echo)
  lf_data="${lf_data}&temp_hdd=${temp_hdd}"
}

sys_temp() {
  local data
  if ! data="$("$HOME/etc/bin/sensor-metrics")" ; then
    return
  fi

  while read line ; do
    if [[ "$line" =~ ^[a-z0-9_]+=[0-9.]+$ ]] ; then
      lf_data="${lf_data}&${line}"
    fi
  done < <(echo "$data" && echo)
}

raid() {
  if ! [ -e "/dev/md0" ] ; then
    return
  fi

  local md0_stat="$(awk 'match($0, /(\[[0-9]\/[0-9]\])[^\[](\[[U_]+\])/, m) {print m[1] " " m[2]}' /proc/mdstat)"
  lf_data="${lf_data}&md0=${md0_stat}"
}

ups() {
  local w="/sbin/apcaccess"
  if ! [ -x "$w" ] ; then
    return
  fi

  local ups_bat="$($w status | awk '/^BCHARGE/ {match($0, /[0-9.]+/, arr); print arr[0]}')"
  lf_data="${lf_data}&ups_bat=${ups_bat}%25"
}

rpi_temp() {
  local w="/usr/bin/vcgencmd"
  if ! [ -x "$w" ] ; then
    return
  fi

  local temp_core="$($w measure_temp | sed -rn -e 's/^.*=(.*)$/\1/p')"
  lf_data="${lf_data}&temp_core=${temp_core}"
}

digitemp_temp() {
  if ! [ -e "$HOME/.digitemprc" ] ; then
    return
  fi

  local data
  if ! data="$("$HOME/etc/bin/digitemp")" ; then
    return
  fi

  # output like:
  # s0=15.56
  local prom=""
  while read line ; do
    if [[ "$line" =~ ^s[0-9]+=[0-9.]+$ ]] ; then
      lf_data="${lf_data}&temp_${line}"

      local index="${line%%=*}"
      local temp="${line#*=}"
      if (( "$temp" < 50 )); then
        prom="${prom}# TYPE sensor_temperature_celsius gauge\n"
        prom="${prom}sensor_temperature_celsius{sensor_index=\"${index}\"} ${temp}\n"
      fi
    fi
  done < <(echo "$data" && echo)

  if grep -q "tmpfs /tmp " /proc/mounts ; then
    echo -e "$prom" > "/tmp/prom_digitemp_tmp"
    mv "/tmp/prom_digitemp_tmp" "/tmp/prom_digitemp"
  fi
}

uptime
ram
loadavg
procs
disc_space
hdd_temp
sys_temp
raid
ups
rpi_temp
digitemp_temp
